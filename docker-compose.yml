version: '3'
services:
    devices-api:
        image: device_api
        build:
          context: ./DSProject.DeviceAPI
          dockerfile: Dockerfile
        ports:
          - "7075:8080"
          - "7076:8081"
        environment:
          - ASPNETCORE_ENVIRONMENT=Production
          - ConnectionStrings:DevicesDb=Server=postgres-db;Database=devicesDb;Port=5432;User Id=postgres;Password=postgres
          - ServiceUrls:AuthAPI=http://auth-api:8080
        depends_on:
          - postgres-db
          - auth-api
    frontend:
        image: ds_project_frontend
        build:
          context: ./frontend_project
          dockerfile: Dockerfile
        ports:
          - "3000:3000"
        depends_on: 
          - postgres-db
          - auth-api
          - devices-api
    auth-api:
        image: auth_api
        build:
          context: ./DSProject.AuthApi
          dockerfile: Dockerfile
        ports:
          - "7005:8080"
          - "7006:8081"
        environment:
          - ASPNETCORE_ENVIRONMENT=Production
          - ConnectionStrings:UsersDb=Server=postgres-db;Database=usersDb;Port=5432;User Id=postgres;Password=postgres
          - ServiceUrls:DevicesAPI=http://devices-api:8080
        depends_on:
          - postgres-db
    monitoring-api:
        image: monitoring_api
        build:
          context: ./DSProject.MonitoringAPI
          dockerfile: Dockerfile
        ports:
          - "7012:8080"
        environment:
          - ASPNETCORE_ENVIRONMENT=Production
          - ConnectionStrings:MonitoringDb=Server=postgres-db;Database=monitoringDb;Port=5432;User Id=postgres;Password=postgres
          - RabbitMq:ApplicationUrl=amqps://zjfnixbe:p8Nr7FcKHcSEqDonuj_IuOrDRi5l4cs9@cow.rmq2.cloudamqp.com/zjfnixbe
        depends_on:
          - postgres-db
    postgres-db:
        image: postgres:latest
        environment:
          POSTGRES_DB: devicesDb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - "5432:5432"
